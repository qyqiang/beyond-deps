{"version":3,"file":"select.js","sources":["../../../../../../packages/components/select-v2/src/select.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"selectRef\"\n    v-click-outside:[popperRef]=\"handleClickOutside\"\n    :class=\"[nsSelect.b(), nsSelect.m(selectSize)]\"\n    @mouseenter=\"states.inputHovering = true\"\n    @mouseleave=\"states.inputHovering = false\"\n  >\n    <el-tooltip\n      ref=\"tooltipRef\"\n      :visible=\"dropdownMenuVisible\"\n      :teleported=\"teleported\"\n      :popper-class=\"[nsSelect.e('popper'), popperClass!]\"\n      :popper-style=\"popperStyle\"\n      :gpu-acceleration=\"false\"\n      :stop-popper-mouse-event=\"false\"\n      :popper-options=\"popperOptions\"\n      :fallback-placements=\"fallbackPlacements\"\n      :effect=\"effect\"\n      :placement=\"placement\"\n      pure\n      :transition=\"`${nsSelect.namespace.value}-zoom-in-top`\"\n      trigger=\"click\"\n      :persistent=\"persistent\"\n      :append-to=\"appendTo\"\n      :show-arrow=\"showArrow\"\n      :offset=\"offset\"\n      @before-show=\"handleMenuEnter\"\n      @hide=\"states.isBeforeHide = false\"\n    >\n      <template #default>\n        <div\n          ref=\"wrapperRef\"\n          :class=\"[\n            nsSelect.e('wrapper'),\n            nsSelect.is('focused', isFocused),\n            nsSelect.is('hovering', states.inputHovering),\n            nsSelect.is('filterable', filterable),\n            nsSelect.is('disabled', selectDisabled),\n            nsSelect.is('value', hasModelValue),\n            preStar && !isFocused && !hasModelValue ? 'pre-star-item' : '',\n          ]\"\n          @click.prevent=\"toggleMenu\"\n        >\n          <span v-if=\"floatLabel\" class=\"float-label\">{{ placeholder }}</span>\n          <div\n            v-if=\"$slots.prefix\"\n            ref=\"prefixRef\"\n            :class=\"nsSelect.e('prefix')\"\n          >\n            <slot name=\"prefix\" />\n          </div>\n          <div\n            ref=\"selectionRef\"\n            :class=\"[\n              nsSelect.e('selection'),\n              nsSelect.is(\n                'near',\n                multiple && !$slots.prefix && !!modelValue.length\n              ),\n            ]\"\n          >\n            <slot\n              v-if=\"multiple\"\n              name=\"tag\"\n              :data=\"states.cachedOptions\"\n              :delete-tag=\"deleteTag\"\n              :select-disabled=\"selectDisabled\"\n            >\n              <div\n                v-for=\"item in showTagList\"\n                :key=\"getValueKey(getValue(item))\"\n                :class=\"nsSelect.e('selected-item')\"\n              >\n                <el-tag\n                  :closable=\"!selectDisabled && !getDisabled(item)\"\n                  :size=\"collapseTagSize\"\n                  :type=\"tagType\"\n                  :effect=\"tagEffect\"\n                  disable-transitions\n                  :style=\"tagStyle\"\n                  @close=\"deleteTag($event, item)\"\n                >\n                  <span :class=\"nsSelect.e('tags-text')\">\n                    <slot\n                      name=\"label\"\n                      :index=\"getIndex(item)\"\n                      :label=\"getLabel(item)\"\n                      :value=\"getValue(item)\"\n                    >\n                      {{ getLabel(item) }}\n                    </slot>\n                  </span>\n                </el-tag>\n              </div>\n\n              <el-tooltip\n                v-if=\"collapseTags && modelValue.length > maxCollapseTags\"\n                ref=\"tagTooltipRef\"\n                :disabled=\"dropdownMenuVisible || !collapseTagsTooltip\"\n                :fallback-placements=\"['bottom', 'top', 'right', 'left']\"\n                :effect=\"effect\"\n                placement=\"bottom\"\n                :popper-class=\"popperClass\"\n                :popper-style=\"popperStyle\"\n                :teleported=\"teleported\"\n              >\n                <template #default>\n                  <div\n                    ref=\"collapseItemRef\"\n                    :class=\"nsSelect.e('selected-item')\"\n                  >\n                    <el-tag\n                      :closable=\"false\"\n                      :size=\"collapseTagSize\"\n                      :type=\"tagType\"\n                      :effect=\"tagEffect\"\n                      :style=\"collapseTagStyle\"\n                      disable-transitions\n                    >\n                      <span :class=\"nsSelect.e('tags-text')\">\n                        + {{ modelValue.length - maxCollapseTags }}\n                      </span>\n                    </el-tag>\n                  </div>\n                </template>\n                <template #content>\n                  <div ref=\"tagMenuRef\" :class=\"nsSelect.e('selection')\">\n                    <div\n                      v-for=\"selected in collapseTagList\"\n                      :key=\"getValueKey(getValue(selected))\"\n                      :class=\"nsSelect.e('selected-item')\"\n                    >\n                      <el-tag\n                        class=\"in-tooltip\"\n                        :closable=\"!selectDisabled && !getDisabled(selected)\"\n                        :size=\"collapseTagSize\"\n                        :type=\"tagType\"\n                        :effect=\"tagEffect\"\n                        disable-transitions\n                        @close=\"deleteTag($event, selected)\"\n                      >\n                        <span :class=\"nsSelect.e('tags-text')\">\n                          <slot\n                            name=\"label\"\n                            :index=\"getIndex(selected)\"\n                            :label=\"getLabel(selected)\"\n                            :value=\"getValue(selected)\"\n                          >\n                            {{ getLabel(selected) }}\n                          </slot>\n                        </span>\n                      </el-tag>\n                    </div>\n                  </div>\n                </template>\n              </el-tooltip>\n            </slot>\n            <div\n              :class=\"[\n                nsSelect.e('selected-item'),\n                nsSelect.e('input-wrapper'),\n                nsSelect.is('hidden', !filterable),\n              ]\"\n            >\n              <input\n                :id=\"inputId\"\n                ref=\"inputRef\"\n                v-model=\"states.inputValue\"\n                :style=\"inputStyle\"\n                :autocomplete=\"autocomplete\"\n                :tabindex=\"tabindex\"\n                aria-autocomplete=\"none\"\n                aria-haspopup=\"listbox\"\n                autocapitalize=\"off\"\n                :aria-expanded=\"expanded\"\n                :aria-label=\"ariaLabel\"\n                :class=\"[nsSelect.e('input'), nsSelect.is(selectSize)]\"\n                :disabled=\"selectDisabled\"\n                role=\"combobox\"\n                :aria-controls=\"contentId\"\n                :aria-activedescendant=\"\n                  states.hoveringIndex >= 0\n                    ? `${contentId}-${states.hoveringIndex}`\n                    : ''\n                \"\n                :readonly=\"!filterable\"\n                spellcheck=\"false\"\n                type=\"text\"\n                :name=\"name\"\n                @input=\"onInput\"\n                @compositionstart=\"handleCompositionStart\"\n                @compositionupdate=\"handleCompositionUpdate\"\n                @compositionend=\"handleCompositionEnd\"\n                @keydown.up.stop.prevent=\"onKeyboardNavigate('backward')\"\n                @keydown.down.stop.prevent=\"onKeyboardNavigate('forward')\"\n                @keydown.enter.stop.prevent=\"onKeyboardSelect\"\n                @keydown.esc.stop.prevent=\"handleEsc\"\n                @keydown.delete.stop=\"handleDel\"\n                @click.stop=\"toggleMenu\"\n              />\n              <span\n                v-if=\"filterable\"\n                ref=\"calculatorRef\"\n                aria-hidden=\"true\"\n                :class=\"nsSelect.e('input-calculator')\"\n                v-text=\"states.inputValue\"\n              />\n            </div>\n            <div\n              v-if=\"shouldShowPlaceholder && hasModelValue\"\n              :class=\"[\n                nsSelect.e('selected-item'),\n                nsSelect.e('placeholder'),\n                nsSelect.is(\n                  'transparent',\n                  !hasModelValue || (expanded && !states.inputValue)\n                ),\n              ]\"\n            >\n              <slot\n                name=\"label\"\n                :index=\"allOptionsValueMap.get(modelValue)?.index ?? -1\"\n                :label=\"currentPlaceholder\"\n                :value=\"modelValue\"\n              >\n                <span>{{ currentPlaceholder }}</span>\n              </slot>\n            </div>\n          </div>\n          <div ref=\"suffixRef\" :class=\"nsSelect.e('suffix')\">\n            <el-icon\n              v-if=\"iconComponent\"\n              v-show=\"!showClearBtn\"\n              :class=\"[nsSelect.e('caret'), nsInput.e('icon'), iconReverse]\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"12\"\n                height=\"12\"\n                viewBox=\"0 0 12 12\"\n              >\n                <path\n                  d=\"M5.99992 7.75002C5.86862 7.75024 5.73856 7.72452 5.61723 7.67432C5.4959 7.62413 5.38569 7.55045 5.29292 7.45752L2.64642 4.81052L3.35342 4.10352L5.99992 6.75002L8.64642 4.10352L9.35342 4.81052L6.70692 7.45702C6.6142 7.55004 6.50401 7.62381 6.38267 7.67409C6.26134 7.72438 6.13126 7.75018 5.99992 7.75002Z\"\n                />\n              </svg>\n            </el-icon>\n            <el-icon\n              v-if=\"showClearBtn && clearIcon\"\n              :class=\"[\n                nsSelect.e('caret'),\n                nsInput.e('icon'),\n                nsSelect.e('clear'),\n              ]\"\n              @click.prevent.stop=\"handleClear\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"12\"\n                height=\"12\"\n                viewBox=\"0 0 12 12\"\n              >\n                <path\n                  d=\"M9.35349 3.35342L8.64648 2.64642L5.99998 5.29292L3.35348 2.64642L2.64648 3.35342L5.29298 5.99992L2.64648 8.64642L3.35348 9.35342L5.99998 6.70692L8.64648 9.35342L9.35349 8.64642L6.70698 5.99992L9.35349 3.35342Z\"\n                />\n              </svg>\n            </el-icon>\n            <el-icon\n              v-if=\"validateState && validateIcon && needStatusIcon\"\n              :class=\"[\n                nsInput.e('icon'),\n                nsInput.e('validateIcon'),\n                nsInput.is('loading', validateState === 'validating'),\n              ]\"\n              v-html=\"validateIcon\"\n            />\n          </div>\n        </div>\n      </template>\n      <template #content>\n        <el-select-menu\n          :id=\"contentId\"\n          ref=\"menuRef\"\n          :data=\"filteredOptions\"\n          :width=\"popperSize - BORDER_HORIZONTAL_WIDTH\"\n          :hovering-index=\"states.hoveringIndex\"\n          :scrollbar-always-on=\"scrollbarAlwaysOn\"\n          :aria-label=\"ariaLabel\"\n        >\n          <template v-if=\"$slots.header\" #header>\n            <div :class=\"nsSelect.be('dropdown', 'header')\" @click.stop>\n              <slot name=\"header\" />\n            </div>\n          </template>\n          <template #default=\"scope\">\n            <slot v-bind=\"scope\" />\n          </template>\n          <template v-if=\"$slots.loading && loading\" #loading>\n            <div :class=\"nsSelect.be('dropdown', 'loading')\">\n              <slot name=\"loading\" />\n            </div>\n          </template>\n          <template v-else-if=\"loading || filteredOptions.length === 0\" #empty>\n            <div :class=\"nsSelect.be('dropdown', 'empty')\">\n              <slot name=\"empty\">\n                <span>{{ emptyText }}</span>\n              </slot>\n            </div>\n          </template>\n          <template v-if=\"$slots.footer\" #footer>\n            <div :class=\"nsSelect.be('dropdown', 'footer')\" @click.stop>\n              <slot name=\"footer\" />\n            </div>\n          </template>\n        </el-select-menu>\n      </template>\n    </el-tooltip>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, provide, reactive, toRefs } from 'vue'\nimport { isArray } from '@element-plus/utils'\nimport { ClickOutside } from '@element-plus/directives'\nimport ElTooltip from '@element-plus/components/tooltip'\nimport ElTag from '@element-plus/components/tag'\nimport ElIcon from '@element-plus/components/icon'\nimport { useCalcInputWidth, useId } from '@element-plus/hooks'\nimport ElSelectMenu from './select-dropdown'\nimport useSelect from './useSelect'\nimport { selectV2Emits, selectV2Props } from './defaults'\nimport { selectV2InjectionKey } from './token'\nimport { BORDER_HORIZONTAL_WIDTH } from '@element-plus/constants'\n\nexport default defineComponent({\n  name: 'ElSelectV2',\n  components: {\n    ElSelectMenu,\n    ElTag,\n    ElTooltip,\n    ElIcon,\n  },\n  directives: { ClickOutside },\n  props: selectV2Props,\n  emits: selectV2Emits,\n  setup(props, { emit }) {\n    const modelValue = computed(() => {\n      const { modelValue: rawModelValue, multiple } = props\n      const fallback = multiple ? [] : undefined\n      // When it is array, we check if this is multi-select.\n      // Based on the result we get\n      if (isArray(rawModelValue)) {\n        return multiple ? rawModelValue : fallback\n      }\n      return multiple ? fallback : rawModelValue\n    })\n\n    const API = useSelect(\n      reactive({\n        ...toRefs(props),\n        modelValue,\n      }),\n      emit\n    )\n    const { calculatorRef, inputStyle } = useCalcInputWidth()\n    const contentId = useId()\n\n    provide(selectV2InjectionKey, {\n      props: reactive({\n        ...toRefs(props),\n        height: API.popupHeight,\n        modelValue,\n      }),\n      expanded: API.expanded,\n      tooltipRef: API.tooltipRef,\n      contentId,\n      onSelect: API.onSelect,\n      onHover: API.onHover,\n      onKeyboardNavigate: API.onKeyboardNavigate,\n      onKeyboardSelect: API.onKeyboardSelect,\n    })\n\n    const selectedLabel = computed(() => {\n      if (!props.multiple) {\n        return API.states.selectedLabel\n      }\n      return API.states.cachedOptions.map((i) => API.getLabel(i) as string)\n    })\n\n    return {\n      ...API,\n      modelValue,\n      selectedLabel,\n      calculatorRef,\n      inputStyle,\n      contentId,\n      BORDER_HORIZONTAL_WIDTH,\n    }\n  },\n})\n</script>\n"],"names":["defineComponent","ElSelectMenu","ElTag","ElTooltip","ElIcon","ClickOutside","selectV2Props","selectV2Emits","computed","isArray","useSelect","reactive","toRefs","useCalcInputWidth","useId","provide","selectV2InjectionKey","BORDER_HORIZONTAL_WIDTH","_resolveComponent","_createVNode","_withCtx","_createElementVNode","_normalizeClass","_withModifiers","_openBlock","_createElementBlock","_toDisplayString","_createCommentVNode","_renderSlot","_Fragment","_renderList","_createTextVNode","_createBlock","_normalizeStyle","_withKeys","_vModelText","_vShow","_normalizeProps","_guardReactiveProps","_export_sfc"],"mappings":"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"}