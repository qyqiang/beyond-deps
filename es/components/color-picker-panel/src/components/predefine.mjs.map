{"version":3,"file":"predefine.mjs","sources":["../../../../../../../packages/components/color-picker-panel/src/components/predefine.vue"],"sourcesContent":["<template>\n  <div :class=\"rootKls\">\n    <div :class=\"colorsKls\">\n      <button\n        v-for=\"(item, index) in rgbaColors\"\n        :key=\"colors[index]\"\n        type=\"button\"\n        :disabled=\"disabled\"\n        :aria-label=\"ariaLabel(item.value)\"\n        :class=\"colorSelectorKls(item)\"\n        @click=\"handleSelect(index)\"\n      >\n        <div :style=\"{ backgroundColor: item.value }\" />\n      </button>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { predefineProps } from '../props/predefine'\nimport { usePredefine, usePredefineDOM } from '../composables/use-predefine'\nimport { useLocale } from '@element-plus/hooks/use-locale'\n\ndefineOptions({\n  name: 'ElColorPredefine',\n})\n\nconst props = defineProps(predefineProps)\n\nconst { rgbaColors, handleSelect } = usePredefine(props)\nconst { rootKls, colorsKls, colorSelectorKls } = usePredefineDOM(props)\nconst { t } = useLocale()\n\nconst ariaLabel = (value: string) => {\n  return t('el.colorpicker.predefineDescription', { value })\n}\n</script>\n"],"names":[],"mappings":";;;;;;mCAuBc,CAAA;AAAA,EACZ,IAAM,EAAA,kBAAA;AACR,CAAA,CAAA,CAAA;;;;;;AAIA,IAAA,MAAM,EAAE,UAAA,EAAY,YAAa,EAAA,GAAI,aAAa,KAAK,CAAA,CAAA;AACvD,IAAA,MAAM,EAAE,OAAS,EAAA,SAAA,EAAW,gBAAiB,EAAA,GAAI,gBAAgB,KAAK,CAAA,CAAA;AACtE,IAAM,MAAA,EAAE,CAAE,EAAA,GAAI,SAAU,EAAA,CAAA;AAExB,IAAM,MAAA,SAAA,GAAY,CAAC,KAAkB,KAAA;AACnC,MAAA,OAAO,CAAE,CAAA,qCAAA,EAAuC,EAAE,KAAA,EAAO,CAAA,CAAA;AAAA,KAC3D,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}